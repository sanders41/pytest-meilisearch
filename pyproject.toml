[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pytest-meilisearch"
dynamic = ["version"]
description = "Pytest helpers for testing projects using Meilisearch"
authors = [{name = "Paul Sanders", email = "paul@paulsanders.dev"}]
requires-python = ">=3.9"
license = { file = "LICENSE" }
readme = "README.md"
repository = "https://github.com/sanders41/pytest-meilisearch"
homepage = "https://github.com/sanders41/pytest-meilisearch"
documentation = "https://github.com/sanders41/pytest-meilisearch"
keywords = ["meilisearch", "python", "pytest"]
classifiers=[
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "meilisearch-python-sdk>=3.0.0",
  "pytest>=7.4.3",
]

[tool.uv]
dev-dependencies = [
  "mypy==1.11.2",
  "pre-commit==3.8.0",
  "pytest-cov==5.0.0",
  "ruff==0.6.2",
  "pytest-asyncio==0.24.0",
]

[tool.hatch.version]
path = "pytest_meilisearch/_version.py"

[project.entry-points.pytest11]
meilisearch = "pytest_meilisearch.plugin"

[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
module = ["tests.*"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=pytest_meilisearch --cov-report term-missing --meilisearch-master-key masterKey --no-cov-on-fail"
asyncio_mode = "auto"
meilisearch_clear = "async_index"

[tool.coverage.report]
exclude_lines = ["if __name__ == .__main__.:", "pragma: no cover"]

[tool.ruff]
line-length = 100
target-version = "py39"
fix = true

[tool.ruff.lint]
select = ["E", "B", "F", "UP", "I001", "T201", "T203"]
ignore=[
  # Recommended ignores by ruff when using formatter
  "E501",
  "W191",
  "E111",
  "E114",
  "E117",
  "D206",
  "D300",
  "Q000",
  "Q001",
  "Q002",
  "Q003",
  "COM812",
  "COM819",
  "ISC001",
  "ISC002",
]
